#!/bin/bash 
set -e
#parse command arguments
config_args=$(/usr/bin/getopt -n $0 -l "help,with-cuda:" -o "hc:" -- "$@")
eval set -- "$config_args"

cuda_flag=0

while true 
do
  case "$1" in
    -h|--help)
     echo "configure options :"
     echo "--help  (prints this help message)"
     echo "--with-cuda=/path/to/cuda  (required and must have sub-directories : lib64,include)"
     exit;;
  
    -c|--with-cuda)
     cuda_flag=1
     cuda_path="$2"
     if [ ${cuda_path:0:2} == -- ]; then
       echo error : specify --with-cuda=/path/to/cuda ... exiting
       exit
     fi
     echo using cuda_path=$cuda_path
     shift 2;;

    --)
     shift
     break;;
  esac
done

cray_env=`env | grep CRAYPE_VERSION`
if [ -z $cray_env ]; then
  if [ -f `which mpicc` ]; then
    echo found mpicc = `which mpicc`
    compiler=`mpicc --version | head -n 1 | cut -b 1-3`
    if [ "$compiler" != "gcc" ]; then
      echo please set the mpicc command to use gcc as the C compiler and re-run the configure script
      echo example: "export OMPI_CC=gcc; or export MPICH_CC=gcc" ... exiting
      exit
    else
     cp makefile.in makefile
    fi  
  else
    echo ensure that mpicc is in your PATH and re-run the configure script ... exiting
    exit
  fi  
else
  if [ -f `which cc` ]; then
    echo found cc = `which cc`
    compiler=`cc --version | head -n 1 | cut -b 1-3`
    if [ "$compiler" != "gcc" ]; then
      echo please set the cc command to use gcc as the C compiler and re-run the configure script ... exiting
      exit
    else
     cp makefile.in makefile
     sed -i "s/CC = mpicc/CC = cc/g" makefile
    fi  
  else
    echo ensure that cc is in your PATH and re-run the configure script ... exiting
    exit
  fi  
fi

if [ $cuda_flag == 0 ]; then
  echo required syntax : ./configure --with-cuda=/path/to/cuda  ...  exiting
  exit
fi

if [ $cuda_flag == 1 ]; then
# check for cuda components
  if [[ ! -z $cuda_path ]]; then
    echo -n testing for libcudart.so...
    if [ -f $cuda_path/lib64/libcudart.so ]; then
      echo found
    else
      echo libcudart.so not found ... check your cuda path ... exiting
      exit
    fi

    echo -n testing for libnvToolsExt.so...
    if [ -f $cuda_path/lib64/libnvToolsExt.so ]; then
      echo found
    else
      echo libnvToolsExt.so not found ... check your cuda path ... exiting
      exit
    fi

    echo -n testing for cuda_profiler_api.h...
    if [ -f $cuda_path/include/cuda_profiler_api.h ]; then
      echo found
    else
      echo cuda_profiler_api.h not found ... check your cuda path ... exiting
      exit
    fi

    echo -n testing for nvToolsExt.h...
    if [ -f $cuda_path/include/nvToolsExt.h ]; then
      echo found
    else
      echo nvToolsExt.h not found ... check your cuda path ... exiting
      exit
    fi

    x_cuda_path="$(echo $cuda_path | sed 's/\//\\\//g')"

    sed -i "s/CUDA_INSTALL_PATH/$x_cuda_path/g" makefile

  else

    echo "error  : the configure option --with-cuda  is required for cuda support"
    echo "example : ./configure --with-cuda=/path/to/cuda"
    exit

  fi

  echo ""
  echo "edit makefile and ensure that the cuda path is set correctly"
  echo "to build the libmpitrace.so library, type : make libmpitrace.so"
  echo ""
fi

