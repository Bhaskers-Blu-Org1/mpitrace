#!/bin/bash 
set -e
#parse command arguments
config_args=$(/usr/bin/getopt -n $0 -l "help,with-mpicc:" -o "hw:" -- "$@")
eval set -- "$config_args"

mpicc_flag=0

while true 
do
  case "$1" in
    -h|--help)
     echo "configure options :"
     echo "--help  (prints this help message)"
     echo "normal syntax : ./configure "
     exit;;
  
    -w|--with-mpicc)
     mpicc_flag=1
     mpi_compiler="$2"
     if [ ${mpi_compiler:0:2} == -- ]; then
       echo error : optionally specify --with-mpicc=mpi_compiler ... exiting
       exit
     fi  
     shift 2;; 

    --)
     shift
     break;;
  esac
done

# if the user specifies --with-mpicc=mpi_compiler, use it, else use mpicc or Cray cc
if [ $mpicc_flag == 1 ]; then
  if [ -z `which $mpi_compiler` ]; then
    echo ensure that $mpi_compiler is in your PATH and re-run the configure script ... exiting
    exit
  else
    if [ -f `which $mpi_compiler` ]; then
      echo found MPI C compiler = `which $mpi_compiler`
      compiler=`$mpi_compiler --version | head -n 1 | cut -b 1-3`
      if [ "$compiler" != "gcc" ]; then
        echo please set $mpi_compiler to use gcc as the C compiler and re-run the configure script ... exiting
        exit
      else
       cp makefile.in makefile
       sed -i "s/CC = mpicc/CC = $mpi_compiler/g" makefile
      fi  
    else
      echo ensure that $mpi_compiler is in your PATH and re-run the configure script ... exiting
      exit
    fi  
  fi  
else
  cray_env=`env | grep CRAYPE_VERSION`
  if [ -z $cray_env ]; then
    if [ -f `which mpicc` ]; then
      echo found mpicc = `which mpicc`
      compiler=`mpicc --version | head -n 1 | cut -b 1-3`
      if [ "$compiler" != "gcc" ]; then
        echo please set the mpicc command to use gcc as the C compiler and re-run the configure script
        echo example: "export OMPI_CC=gcc; or export MPICH_CC=gcc" ... exiting
        exit
      else
       cp makefile.in makefile
      fi  
    else
      echo ensure that mpicc is in your PATH and re-run the configure script ... exiting
      exit
    fi  
  else
    if [ -f `which cc` ]; then
      echo found cc = `which cc`
      compiler=`cc --version | head -n 1 | cut -b 1-3`
      if [ "$compiler" != "gcc" ]; then
        echo please set the cc command to use gcc as the C compiler and re-run the configure script ... exiting
        exit
      else
       cp makefile.in makefile
       sed -i "s/CC = mpicc/CC = cc/g" makefile
      fi  
    else
      echo ensure that cc is in your PATH and re-run the configure script ... exiting
      exit
    fi  
  fi
fi

echo "to build the libmpitrace.so library, type : make libmpitrace.so"

